
This section uses `quarto`'s conditional formatting to swap out the correct
table depending out output. The problem here is `pandas` can write nice latex
tables, but those don't convert to html. Instead you can just write both formats
out to file and select the correct one on-demand.

::: {.content-visible when-format="html" #tbl-sdtable}
{{< include _table_sd_table.html >}}
Blockgroups in San Diego
:::

{{< include _table_sd_table.md >}}

You can also do the same thing with figures, e.g. to swap in an interactive map
in the html output and use a static map in the pdf.

<!-- use html comments to write private notes in the text -->

![California Counties](_fig_ggmap.png){#fig-counties width=60%}

Everyone from the `R` world will recognize @fig-counties as coming from
`ggplot`. It shows up either way. But the blockgroups in San Diego show up
differently depending on the output.

Here is a map showing the spatial graph of blockgroups in San Diego using a Rook
contiguity rule. But @fig-sdmap shows up differently depending on the output,
thanks to quarto's conditional include syntax (awesome).

::: {.content-visible when-format="pdf"}
![Rook Contiguity Graph for SD Blockgroups](_fig_sdmap.png){#fig-sdmap width=50%}
:::

::: {.content-visible when-format="html" #fig-sdmap}
<iframe width="780" height="500" src="_fig_sdmap.html"></iframe>

Rook Contiguity Graph for SD Blockgroups
:::

::: {.callout-note}
This is kinda hacky because it relies on an iFrame that requires the embedded
map to be available the relative URL set above (you cant download this html file
and expect it to work). The `embed-resources` option in quarto wont work for an
iframe either.
:::

In the end, we seamlessly weave together `geosnap` [@knaap2024GeosnapGeospatial],
PySAL [@rey2021PySALEcosystem], and `tidycensus` [@tidycensus]. Use the best tool
for the job, then let quarto sew things together.
